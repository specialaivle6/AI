solar-panel-ai-service/
├── app/
│   ├── __init__.py
│   ├── main.py                 # FastAPI 앱 진입점 (YOLOv8 기반)
│   ├── core/
│   │   ├── __init__.py
│   │   └── config.py          # 설정 관리 (YOLOv8 설정 포함)
│   ├── services/
│   │   ├── __init__.py
│   │   └── damage_analyzer.py  # YOLOv8 기반 손상 분석 서비스
│   ├── api/
│   │   └── __init__.py
│   ├── models/
│   │   └── __init__.py
│   └── utils/
│       └── __init__.py
├── models/                    # 학습된 모델 파일 저장
│   ├── yolov8_seg_0812_v0.1.pt  # 커스텀 YOLOv8 세그멘테이션 모델
│   └── mobilenet_v3_small.pth   # 레거시 MobileNet 모델 (사용 안함)
├── logs/                      # 서비스 로그 저장
│   └── ai_service.log
├── temp/                      # 임시 파일 저장
├── uploads/                   # 업로드된 이미지 저장
├── tests/                     # 테스트 코드 (향후 추가)
├── requirements.txt           # pip 의존성 (YOLOv8, ultralytics 포함)
├── Dockerfile                 # Docker 배포용 (YOLOv8 환경)
├── README.md                  # 프로젝트 메인 문서
├── guide.md                   # 빠른 시작 가이드
├── API_SPECIFICATION.md       # 상세 API 명세서
└── test_api.py               # API 테스트 스크립트

---

## 📂 주요 디렉토리 및 파일 설명

### 🔧 app/ - 메인 애플리케이션
- **main.py**: FastAPI 애플리케이션 진입점, YOLOv8 기반 손상 분석 API 서버
- **core/config.py**: 서비스 설정 관리 (모델 경로, 임계값, 성능 설정 등)
- **services/damage_analyzer.py**: YOLOv8 모델을 사용한 태양광 패널 손상 분석 핵심 로직

### 🤖 models/ - AI 모델 저장소
- **yolov8_seg_0812_v0.1.pt**: 커스텀 훈련된 YOLOv8 세그멘테이션 모델 (메인 모델)

### 📊 데이터 저장소
- **logs/**: 서비스 실행 로그, 에러 로그, 분석 통계
- **temp/**: 임시 파일 저장 (이미지 처리 중간 결과 등)
- **uploads/**: 사용자가 업로드한 이미지 파일 저장

### 📚 문서 및 설정
- **README.md**: 프로젝트 개요, 설치 방법, 사용 가이드
- **guide.md**: 5분만에 시작하는 빠른 시작 가이드
- **API_SPECIFICATION.md**: REST API 상세 명세서
- **requirements.txt**: Python 패키지 의존성 (ultralytics, fastapi 등)
- **Dockerfile**: YOLOv8 환경 Docker 컨테이너 설정

---

## 🚀 서비스 아키텍처

```
┌─────────────────────────────────────────────────────────────┐
│                    Client (Spring Boot)                     │
├─────────────────────────────────────────────────────────────┤
│                    HTTP REST API                            │
├─────────────────────────────────────────────────────────────┤
│  FastAPI Server (main.py)                                  │
│  ├── /analyze-damage     (단일 이미지 분석)                │
│  ├── /batch-analyze      (일괄 분석)                      │
│  └── /health            (헬스체크)                        │
├─────────────────────────────────────────────────────────────┤
│  DamageAnalyzer (services/damage_analyzer.py)              │
│  ├── YOLOv8 모델 로딩                                      │
│  ├── 이미지 전처리                                         │
│  ├── 픽셀 단위 손상 분석                                   │
│  ├── 비즈니스 평가                                         │
│  └── 결과 후처리                                           │
├─────────────────────────────────────────────────────────────┤
│  YOLOv8 Model (models/yolov8_seg_0812_v0.1.pt)           │
│  ├── Instance Segmentation                                 │
│  ├── 7개 클래스 검출                                       │
│  └── 픽셀 단위 정밀 분석                                   │
└─────────────────────────────────────────────────────────────┘
```

---

## 🔄 v2.0 업데이트 내역

### ✅ 추가된 구조
- **services/damage_analyzer.py**: YOLOv8 기반 새로운 분석 엔진
- **logs/, temp/, uploads/**: 데이터 관리를 위한 디렉토리 구조
- **API_SPECIFICATION.md**: 상세 API 문서
- **guide.md**: 개발자 친화적 빠른 시작 가이드

### ❌ 제거된 구조 (v1.0에서)
- **models/model_loader.py**: MobileNet 전용 로더 (더 이상 사용 안함)
- **models/inference.py**: 기존 추론 로직 (DamageAnalyzer로 통합)
- **api/endpoints.py**: 별도 엔드포인트 파일 (main.py로 통합)
- **services/image_processor.py**: 별도 이미지 처리기 (DamageAnalyzer로 통합)
- **services/result_processor.py**: 별도 결과 처리기 (DamageAnalyzer로 통합)
- **core/security.py**: 보안 기능 (향후 필요시 추가 예정)
- **utils/logger.py**: 별도 로거 (Python 기본 logging 사용)

### 🎯 최적화된 구조 특징
1. **단순화**: 핵심 기능을 DamageAnalyzer 하나로 통합
2. **모듈화**: 서비스별 독립적 구조로 향후 확장 용이
3. **표준화**: FastAPI 베스트 프랙티스 적용
4. **문서화**: 개발자 친화적 문서 체계 구축

---

## 🚀 향후 확장 계획

### v2.1 예상 구조 (단기)
```
├── app/
│   ├── services/
│   │   ├── damage_analyzer.py      # 현재
│   │   ├── drone_analyzer.py       # 드론 영상 분석 (신규)
│   │   └── performance_monitor.py  # 성능 모니터링 (신규)
│   └── api/
│       ├── v1/                     # API 버전 관리
│       └── v2/
```

### v3.0 예상 구조 (장기)
```
├── app/
│   ├── services/
│   │   ├── panel/                  # 패널 관련 서비스들
│   │   ├── drone/                  # 드론 관련 서비스들
│   │   ├── energy/                 # 에너지 예측 서비스들
│   │   └── maintenance/            # 유지보수 관련 서비스들
│   ├── models/
│   │   ├── loaders/               # 모델 로더들
│   │   └── managers/              # 모델 관리자들
│   └── api/
│       ├── routes/                # 라우터별 분리
│       └── middleware/            # 미들웨어들
```
